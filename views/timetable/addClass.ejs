<% layout("/layouts/boilerplat") %>


<body>
    <div class="class-form-wrapper mt-5">
        <h2>Add Class</h2>
        <form action="/timetable/add-class" method="POST">
            <!-- Branch Selection -->
            <div class="form-group">
                <label for="branch" class="form-label">Branch</label>
                <select name="branch" id="branch" class="form-control" required onchange="updateSemesters()">
                  <option value="IT">IT</option>
                        <option value="CP">CP</option>
                        <option value="AI">AI</option>
                        <option value="CSD">CSD</option>
                        <option value="MECHENICAL">MECHANICAL</option>
                        <option value="CIVIL">CIVIL</option>
                        <option value="FPT">FPT</option>
                        <option value="DT">DT</option>
                        <option value="ELECTRICAL">ELECTRICAL</option>
                        <option value="EAC">EAC</option>
                        <option value="AUTOMOBILE">AUTOMOBILE</option>
                </select>
            </div>
    
            <!-- Semester Selection -->
            <div class="form-group" id="semesterDiv" style="display: none;">
                <label for="semester" class="form-label">Semester</label>
                <select name="semester" id="semester" class="form-control" required onchange="fetchSubjects();">
                    <option value="">Select Semester</option>
                    <% for(let i = 1; i <= 8; i++) { %>
                        <option value="<%= i %>">Semester <%= i %></option>
                    <% } %>
                </select>
            </div>
    
            <!-- Total Classes Input -->
            <div class="form-group" id="totalClassesDiv" style="display: none;">
                <label for="totalClasses" class="form-label">Total Number of Div</label>
                <input type="number" id="totalClasses" name="totalClasses" class="form-control" min="1" max="10" required onchange="updateSections()">
            </div>
    
            <!-- Section Selection -->
            <div class="form-group" id="sectionDiv" style="display: none;">
                <label for="section" class="form-label">Section</label>
                <select name="section" id="section" class="form-control" required>
                    <!-- Options updated dynamically -->
                </select>
            </div>
            <div class="form-group" id="batches-container">
                <label for="batches" class="form-label">Number of Batches in class</label>
                <input 
                    type="number" 
                    id="batches" 
                    name="batches" 
                    class="form-control" 
                    min="1" 
                    max="10" 
                    required 
                    onchange="generateBatchLabels()"
                >
            </div>



    
            <!-- Subject Selection -->
            <div class="form-group" id="subjectsDiv"></div>
    
            <button type="submit" class="btn btn-primary">Add Class</button>
        </form>
    </div>
    

    
    <script>
        // üß† Load existing class details (branch + semester + section)
        const existingClasses = <%- JSON.stringify(existingTimetables || []) %>;
      
        function updateSemesters() {
          const branch = document.getElementById("branch").value;
          const semesterDiv = document.getElementById("semesterDiv");
          const sectionDiv = document.getElementById("sectionDiv");
          const subjectsDiv = document.getElementById("subjectsDiv");
          const totalClassesDiv = document.getElementById("totalClassesDiv");
      
          if (branch) {
            semesterDiv.style.display = "block";
            totalClassesDiv.style.display = "block";
            subjectsDiv.innerHTML = "";
          } else {
            semesterDiv.style.display = "none";
            totalClassesDiv.style.display = "none";
            sectionDiv.style.display = "none";
            subjectsDiv.innerHTML = "";
          }
        }
      
        function updateSections() {
          const branch = document.getElementById("branch").value;
          const semester = document.getElementById("semester").value;
          const totalClasses = parseInt(document.getElementById("totalClasses").value) || 0;
          const sectionDiv = document.getElementById("sectionDiv");
          const sectionDropdown = document.getElementById("section");
      
          sectionDropdown.innerHTML = ""; // Clear previous options
      
          for (let i = 0; i < totalClasses; i++) {
            let sectionLetter = String.fromCharCode(65 + i); // A, B, C...
      
            // Check if the combination of branch, semester, and section already exists
            const isDuplicate = existingClasses.some(cls =>
              cls.branch === branch &&
              String(cls.semester) === String(semester) &&
              cls.section === sectionLetter
            );
      
            // If it exists, show an alert and skip adding this section
            if (isDuplicate) {
              alert(`‚ö†Ô∏è Class ${branch} - Sem ${semester} - Section ${sectionLetter} already exists!`);
              continue; // Skip this section
            }
      
            // Add new section if it doesn't exist
            sectionDropdown.innerHTML += `<option value="${sectionLetter}">${sectionLetter}</option>`;
          }
      
          sectionDiv.style.display = totalClasses > 0 ? "block" : "none";
        }
      
        function fetchSubjects() {
          const branch = document.getElementById("branch").value;
          const semester = document.getElementById("semester").value;
          const subjectsDiv = document.getElementById("subjectsDiv");
      
          if (!branch || !semester) return;
      
          fetch(`/timetable/get-subjects?branch=${branch}&semester=${semester}`)
            .then(response => response.json())
            .then(data => {
              subjectsDiv.innerHTML = "";
              if (data.subjects.length > 0) {
                subjectsDiv.innerHTML = `<label class="form-label">Select Subjects</label>`;
                data.subjects.forEach(subject => {
                  subjectsDiv.innerHTML += `
                    <div class="form-check">
                      <input type="checkbox" name="subjects" value="${subject.subject}" class="form-check-input" checked>
                      <label class="form-check-label">${subject.subject}</label>
                    </div>
                  `;
                });
              } else {
                subjectsDiv.innerHTML = `<p class="text-danger">No subjects available for this semester.</p>`;
              }
            })
            .catch(error => console.error("Error fetching subjects:", error));
        }
      
        function generateBatchLabels() {
          const batchCount = parseInt(document.getElementById("batches").value);
          const batchLabelsDiv = document.getElementById("batch-labels");
          batchLabelsDiv.innerHTML = ""; // Clear previous labels
      
          if (!isNaN(batchCount) && batchCount > 0 && batchCount <= 10) {
            for (let i = 0; i < batchCount; i++) {
              const batchLetter = String.fromCharCode(65 + i); // A, B...
              const label = document.createElement("div");
              label.innerText = `Batch ${batchLetter}`;
              batchLabelsDiv.appendChild(label);
            }
          }
        }
      </script>
      
    
</body>
